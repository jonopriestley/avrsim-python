; Runs tests on the functions to check they work

.section .data

	a: .byte 104, 20, 30
	b: .string "\n\"string\"\n", "\"string2\""
	c: .asciz "asciz2"
	d: .ascii "ascii"
	e: .space 2, 240
	f: .string "\nhello worlddd"
	result: .space 1, 0xFF

.section .text
	.global setup
	
	setup:
		ldi r18, 15
		ldi r19, 22
		ldi r26, lo8(b)
		ldi r27, hi8(b)

	run:
		push r27
		push r26
		call printf
		call printf
		pop r0
		pop r0
		adc r18, r19
		add r18, r19
		and r18, r19
		andi r18, 253
		bclr 2
		cpi r20, 1

		; All of the branching works, this is just a small text

		brbc 0, end
		brbs 6, end
		brcc end
		bclr 0
		brcs end
		breq end
		bclr 5

		; 	End of branching set

		bset 5
		call test_call
		cbi 10, 2
		ldi r20, 255
		cbr r20, 252
		bset 0
		clc
		bset 5
		clh
		bset 7
		cli
		bset 2
		cln
		clr r20
		bset 4
		cls
		bset 6
		clt
		bset 3
		clv
		bset 1
		clz
		com r20
		cp r20, r18
		cpc r20, r18
		cpi r18, 10
		dec r20
		eor r20, r18
		in r30, 0x3d
		inc r20
		jmp next
		ret ; if jmp doesnt work

	next:
		ldi r26, lo8(a)
		ld r20, X+
		ld r20, X
		ldd r20, X+4
		lds r20, a
		lsl r20
		lsr r20
		mov r21, r20
		mul r20, r21
		muls r20, r21
		mulsu r20, r21
		neg r18
		nop
		or r18, r20
		ori r20, 73
		ldi r0, 255
		;out 0x3d, r0 -> out works
		ldi r0, 8
		push r19
		pop r22
		rol r19
		ror r19
		rjmp next2
		ldi r0, 141
		ret

	next2:
		sbc r18, r19
		sbi 5, 2
		sbr r18, 2
		sec
		seh
		sei
		sen
		ser r4
		ses
		set
		sev
		sez
		st X+, r18
		std X+3, r19
		sts result, r19
		sub r18, r19
		subi r19, 2
		ldi r23, 240
		swap r23
		xch Z, R19

		ldi r0, 255
		jmp end

	test_call:
		ldi r0, 10
		clr r0
		ret

	; subroutine to clear SREG
	clr_sreg:
		bclr 0
		bclr 1
		bclr 2
		bclr 3
		bclr 4
		bclr 5
		bclr 6
		bclr 7
		ret

	; subroutine to set SREG
	set_sreg:
		bset 0
		bset 1
		bset 2
		bset 3
		bset 4
		bset 5
		bset 6
		bset 7
		ret


	end:
		ret
		
.end
